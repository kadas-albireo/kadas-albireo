%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (spiticon.eps)
%%CreationDate: (Mon Sep 27 13:48:01 2004)
%%BoundingBox: 0 0 24 23
%%HiResBoundingBox: 0 0 24 23
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 24 23
userdict begin
DisplayImage
0 0
24 23
12.000000
24 23
0
0
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0030E61034E64A69E67B8DEE183CC5
0014CD0024CD002CCD0014ACFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF002CE60024DE0848E61859EE185DEE1861EE2979F65299FF94BAFF73A1F6
4A8DEE5295F65289EE4A7DEE396DE63159DE082CBD000000FFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF0038E6084CEE3989F64199FF399DFF39A5FF31AAFF29A5FF1089FF3189FFB4E2FF
5ACEFF6AD6FF83DEFF94E6FF9CDEFF83BEF65289EE0030B4000C29FFFFFFFFFFFFFFFFFF
FFFFFF0028DE297DF66AD2FF52C6FF4AC2FF39BAFF31B2FF29AAFF209DFF0881FF8BC6FF
41BAFF31B2FF31B2FF39BAFF4AC2FF83DEFFACE6FF5A99F610389C000000FFFFFFFFFFFF
FFFFFF003CE63999FF52C6FF41BEFF31B6FF31B6FF31B2FF31AEFF20A1FF108DFF5AAEFF
4AC2FF29B2FF31B6FF31B2FF31B2FF29B2FF62CAFFA4DEFF3969CD000000000000FFFFFF
FFFFFF1055EE39A5FF4AC2FF39B6FF39B6FF31B2FF31B6FF31B2FF29AAFF1895FF4AAEFF
39BAFF31B6FF31B2FF31B6FF31B2FF31B6FF31B6FF94E6FF5A91E6000839000000FFFFFF
FFFFFF1065EE39AAFF39B6FF31B6FF31B2FF39B6FF31B2FF31B2FF29AAFF209DFF31AEFF
31B6FF31B2FF31B6FF31B2FF31B6FF31B2FF31B2FF62CEFF7BC2FF000C8B000008FFFFFF
FFFFFF1869F631AEFF39B6FF31B6FF41BEFF39B6FF31B2FF29AEFF31AEFF20A1FF31B2FF
31B6FF39B6FF31B6FF39BAFF39B6FF39BAFF31B2FF52C6FF7BC6FF0014A4000C4AFFFFFF
FFFFFF1869EE39B6FF29A5FF2085EE208DF631AEFF29AAFF29AEFF29B2FF39B6FF39B6FF
41BAFF41BAFF4AC2FF4AC2FF52C6FF52C2FF4AC2FF41BEFF7BC2FF00147B00188BFFFFFF
FFFFFF2071F631B2FF105DCD00185A1044B43199FF39B6FF31B2FF41BAFF41BAFF52C2FF
5AC6FF6ACAFF6ACEFF7BD6FF7BD6FF83DEFF6ACEFF41BEFF6AB2F600146A0018BDFFFFFF
FFFFFF1879F62089F600143900000000247B297DEE4ABEFF31B2FF39B2FF62C6FF7BD2FF
9CDEFFA4E6FFB4EEFFBDF2FFC5F6FF94E2FF41B6FF41BAFF5A99EE00042900106AFFFFFF
FFFFFF1881FF1871DE080C29000000001CB42969EE73CAFF41BAFF29AAFF319DFF5291F6
7BAEFF94BEFF94BAFF83B2FF52AAFF2995FF1899FF4ABEFF4179D5000408000000FFFFFF
FFFFFF1075EE1865D50004200000000014C5316DEE8BDAFF62CEFF31B2FF2091FF08349C
102483102C9418288B0830C5086DFF0881FF209DFF4AB2FF3161BD000000000000FFFFFF
FFFFFF1869EE105DD5000C290000000020D53975EEACEAFF83DEFF4ABEFF2095F608388B
000000000000000000003CDE087DFF2099FF29A5FF39A1FF183C8B000000000000FFFFFF
FFFFFF0040CD0834C50008200000000018AC1848CD5A89E694E2FF5ACAFF2995F6003083
0000000000000000000030BD0844D51071EE2085F62061C5081441000000FFFFFFFFFFFF
FFFFFF000000000008000008000000FFFFFF0000001028834179CD5295D51855AC101C41
000000FFFFFFFFFFFF00000000041000145A00105A100C18000000000000FFFFFFFFFFFF
FFFFFFFFFFFF000000000000FFFFFFFFFFFFFFFFFF000000000000000000000000000000
000000FFFFFFFFFFFFFFFFFF000000000000000000000000000000FFFFFFFFFFFFFFFFFF

end
%%PageTrailer
%%Trailer
%%EOF
