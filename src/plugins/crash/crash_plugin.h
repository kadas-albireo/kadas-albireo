/***************************************************************************
 *  crash_plugin.h                                                         *
 *  -------------------                                                    *
 *  begin                : Oct 05, 2015                                    *
 *  copyright            : (C) 2015 by Sandro Mani / Sourcepole AG         *
 *  email                : smani@sourcepole.ch                             *
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

#ifndef VBSSEARCH_PLUGIN_H
#define VBSSEARCH_PLUGIN_H

#include <QAction>
#include <QTextStream>
#include <QToolBar>
#include <qgisinterface.h>
#include "../qgisplugin.h"

static const QString sName = QObject::tr( "Crash" );
static const QString sDescription = QObject::tr( "Crash" );
static const QString sCategory = QObject::tr( "User Interface" );
static const QString sPluginVersion = QObject::tr( "Version 0.1" );
static const QgisPlugin::PLUGINTYPE sPluginType = QgisPlugin::UI;
static const QString sPluginIcon = ":/crash/crash.svg";

class QgsCrashPlugin: public QObject, public QgisPlugin
{
    Q_OBJECT
public:
    QgsCrashPlugin(QgisInterface* iface)
	: QgisPlugin( sName, sDescription, sCategory, sPluginVersion, sPluginType ),
	  mIface(iface) {}
    
    void initGui()
    {
        mCrashAction = new QAction(QIcon(sPluginIcon), tr("Crash"), this);
        mIface->pluginToolBar()->addAction(mCrashAction);
        connect(mCrashAction, SIGNAL(triggered()), this, SLOT(crash()));
    }
    void unload()
    {
        delete mCrashAction;
		mCrashAction = 0;
    }
private:
    QgisInterface* mIface;
    QAction* mCrashAction;

private slots:
    void crash(){
        QTextStream(stdout) << (*((int*)0)) << endl;
    }
};

//////////////////////////////////////////////////////////////////////////
//
//
//  THE FOLLOWING CODE IS AUTOGENERATED BY THE PLUGIN BUILDER SCRIPT
//    YOU WOULD NORMALLY NOT NEED TO MODIFY THIS, AND YOUR PLUGIN
//      MAY NOT WORK PROPERLY IF YOU MODIFY THIS INCORRECTLY
//
//
//////////////////////////////////////////////////////////////////////////


/**
 * Required extern functions needed  for every plugin
 * These functions can be called prior to creating an instance
 * of the plugin class
 */
// Class factory to return a new instance of the plugin class
QGISEXTERN QgisPlugin* classFactory( QgisInterface * theQgisInterfacePointer )
{
  return new QgsCrashPlugin( theQgisInterfacePointer );
}
// Return the name of the plugin - note that we do not user class members as
// the class may not yet be insantiated when this method is called.
QGISEXTERN QString name()
{
  return sName;
}

// Return the description
QGISEXTERN QString description()
{
  return sDescription;
}

// Return the category
QGISEXTERN QString category()
{
  return sCategory;
}

// Return the type (either UI or MapLayer plugin)
QGISEXTERN int type()
{
  return sPluginType;
}

// Return the version number for the plugin
QGISEXTERN QString version()
{
  return sPluginVersion;
}

QGISEXTERN QString icon()
{
  return sPluginIcon;
}

// Delete ourself
QGISEXTERN void unload( QgisPlugin * thePluginPointer )
{
  delete thePluginPointer;
}

#endif // VBSSEARCH_PLUGIN_H
