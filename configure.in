dnl Process this file with autoconf to produce a configure script.

AC_INIT

#AC_CONFIG_SRCDIR([libtool])
 
AM_INIT_AUTOMAKE(qgis, 0.1)

AC_PREFIX_PROGRAM(gcc)

AC_PROG_CXX

AC_LANG([C++])

AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_INSTALL

AC_LIBTOOL_DLOPEN
AC_PROG_LIBTOOL


gw_CHECK_QT



dnl ---------------------------------------------------------------------------
dnl GDAL/OGR
dnl ---------------------------------------------------------------------------
AC_ARG_WITH(gdal,
  AC_HELP_STRING([--with-gdal=path],
                 [Full path to 'gdal-config' script, e.g. '--with-gdal=/usr/local/bin/gdal-config']),
  [if test -x "$with_gdal/gdal-config" ; then
       GDAL_CONFIG="$with_gdal/gdal-config"
   else
       AC_MSG_ERROR("Cannot find $with_gdal")
   fi],
  [GDAL_CONFIG=`which gdal-config`
   if test ! -x "$GDAL_CONFIG" ; then
       AC_MSG_ERROR(["Cannot find gdal-config, try to use --with-gdal option"])
   fi])

AC_MSG_CHECKING([for GDAL/OGR])
if test x`$GDAL_CONFIG --ogr-enabled` = "xno" ; then
  AC_MSG_ERROR([GDAL must be compiled with OGR support and currently is not.])
fi
AC_MSG_RESULT(yes)

GDAL_LIB="`$GDAL_CONFIG --libs`"
GDAL_CFLAGS="`$GDAL_CONFIG --cflags`"

AC_SUBST(GDAL_LIB)
AC_SUBST(GDAL_CFLAGS)



dnl ---------------------------------------------------------------------------
dnl PostgreSQL
dnl ---------------------------------------------------------------------------
AC_ARG_WITH(pg,
  AC_HELP_STRING([--with-pg=path],
                 [PostgreSQL (PostGIS) Support (full path to pg_config)]))

AC_MSG_CHECKING([for PostgreSQL])
if test x"$with_pg" = "xyes" -o x"$with_pg" = "x" ; then
  AC_MSG_RESULT([yes])
  AC_PATH_PROG([PG_CONFIG], [pg_config], [no])
elif test x"$with_pg" = "xno" ; then
  AC_MSG_RESULT([no])
  PG_CONFIG=no
else
  AC_MSG_RESULT([yes])
  PG_CONFIG="$with_pg/pg_config"
fi

if test x"$PG_CONFIG" != "xno" ; then
  PG_LIB="-L`$PG_CONFIG --libdir` -lpq"
  PG_INC="`$PG_CONFIG --includedir`"
  AC_MSG_CHECKING([for postgreSQL libs])
  AC_MSG_RESULT([$PG_LIB])
	ac_postgresql="yes"
else
	ac_postgresql="no"
fi

AC_SUBST(PG_INC)
AC_SUBST(PG_LIB)

AM_CONDITIONAL([HAVE_POSTGRESDB], [test "$ac_postgresql" = "yes"])


dnl ---------------------------------------------------------------------------
dnl SPIT plugin
dnl ---------------------------------------------------------------------------
AC_ARG_ENABLE(spit,
  AC_HELP_STRING([--disable-spit],
                 [disable Shapefile to PostgreSQL (PostGIS) import plugin (built by default with PostgreSQL support)]),
	[ac_spit=$enableval], [ac_spit=yes])
                 
AC_MSG_CHECKING([for SPIT])
if test x"$ac_spit" = "xyes"; then
	if test x"$ac_postgresql" = "xyes"; then
		AC_MSG_RESULT([yes])
	else
		ac_spit="no"
		AC_MSG_RESULT([no (no PostgreSQL available)])
	fi
else
  AC_MSG_RESULT([no])
fi

AM_CONDITIONAL([HAVE_SPIT], [test "$ac_spit" = "yes"])


dnl ---------------------------------------------------------------------------
dnl GRASS and GRASS++ package
dnl ---------------------------------------------------------------------------
# AC_ARG_WITH(grass,
#   AC_HELP_STRING([--with-grass=DIR],[GRASS Support (full path to GRASS binary package, e.g. --with-grass=/usr1/grass51/dist.i686-pc-linux-gnu)]))

# AC_ARG_WITH(grasspp,
#   AC_HELP_STRING([--with-grasspp=DIR],[Full path to GRASS++ binary package]))

# AC_MSG_CHECKING([for GRASS])

# if test x"$with_grass" != "xno" -a "$with_grass" != "x" ; then
#   # I don't know how to add library path to AC_CHECK_LIB()
#   GISLIB=`ls $with_grass/lib/libgrass_gis.*`  
#   if test ! -f "$GISLIB"; then
#       AC_MSG_ERROR( [GRASS library not found] )
#   fi
#   GRASSPPLIB=`ls $with_grasspp/libgrass++.*`  
#   if test ! -f "$GRASSPPLIB"; then
#       AC_MSG_ERROR( [GRASS++ library not found] )
#   fi
#   GRASS_LIB="-L$with_grass/lib/ -L$with_grasspp -lgrass_vect -lgrass_dig2 -lgrass_dbmiclient -lgrass_dbmibase -lgrass_shape -lgrass_dgl -lgrass_rtree -lgrass_gis -lgrass_datetime -lgrass_linkm -lgrass_form -lgrass++"
 
#   GISINC=`ls $with_grass/include/gis.h`
#   if test ! -f "$GISINC"; then
#       AC_MSG_ERROR( [GRASS headers not found] )
#   fi
#   GRASSPPINC=`ls $with_grasspp/GRASS.h`  
#   if test ! -f "$GRASSPPINC"; then
#       AC_MSG_ERROR( [GRASS++ headers not found] )
#   fi
#   GRASS_INC="$with_grass/include/ $with_grasspp/"
#   HAVE_GRASS=1
#   AC_MSG_RESULT([yes])
# else 
#   AC_MSG_RESULT([no])
# fi

# AC_SUBST(HAVE_GRASS)
# AC_SUBST(GRASS_LIB)
# AC_SUBST(GRASS_INC)


dnl ---------------------------------------------------------------------------
dnl Debugging
dnl ---------------------------------------------------------------------------
AC_ARG_ENABLE(debug,
	AC_HELP_STRING([--enable-debug],
								 [Enable debuging messages [[default=no]]]),
        [ac_debug=$enableval], [ac_debug=no])

AC_MSG_CHECKING([if debug statements should be sent to stdout/stderr])
if test x"$ac_debug" = "xno" ; then
	DEBUG_QGIS=-DNO_DEBUG
	AC_MSG_RESULT([no])
else
	DEBUG_QGIS=-DDEBUG
	AC_MSG_RESULT([yes])
fi
AC_SUBST(DEBUG_QGIS)


#echo ${prefix}/lib
#ac_libdir=${prefix}/lib/$PACKAGE
#AC_MSG_CHECKING([plugin install directory])
#AC_MSG_RESULT([$libdir])
#echo Plugins will be installed in $libdir

AC_CONFIG_FILES([
	Makefile 
	src/Makefile 
	providers/Makefile 
	providers/ogr/Makefile
	providers/postgres/Makefile
  plugins/Makefile
  plugins/spit/Makefile
  plugins/example/Makefile
  plugins/maplayer/Makefile
  plugins/geoprocessing/Makefile
])

AC_OUTPUT

dnl Output the configuration summary
echo ""
echo "=========================================="
echo "$PACKAGE $VERSION"
echo "------------------------------------------"
echo "GDAL/OGR      : yes"
echo "PostgreSQL    : $ac_postgresql"
echo "SPIT          : $ac_spit"
echo ""
echo "Debug         : $ac_debug"
echo "Plugin dir    : ${prefix}/lib/$PACKAGE"
echo ""
echo "The binary will be installed in $prefix/bin"
echo "------------------------------------------"
echo "Configure finished, type 'make' to build."
